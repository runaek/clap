// Code generated by github.com/runaek/clap/cmd/generate_drivers. DO NOT EDIT

package derive

import (
	"fmt"
	"github.com/runaek/clap"
	"github.com/runaek/clap/pkg/parse"
)

const (
	ErrBool clap.Error = "unable to derive 'bool' Argument"
)

type boolDeriver struct{}

func (_ boolDeriver) DeriveFlag(a any, s string, opts ...clap.Option) (clap.IFlag, error) {
	v, ok := a.(*bool)

	if !ok {
		return nil, fmt.Errorf("%w: want *bool but got %T", ErrBool, v)
	}

	return clap.NewFlag[bool](v, s, parse.Bool{}, opts...), nil
}

func init() {
	clap.RegisterFlagDeriver("bool", boolDeriver{})
}